name: Android APK (debug + release if keystore)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android SDK (API 35)
        shell: bash
        run: |
          set -euxo pipefail
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --licenses
          "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Ensure minimal resources
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p app/src/main/res/values
          if [ ! -f app/src/main/res/values/styles.xml ]; then
            cat > app/src/main/res/values/styles.xml << 'EOF'
<resources>
  <style name="Theme.MAKENZI.Dark" parent="Theme.MaterialComponents.DayNight.NoActionBar">
    <item name="android:windowBackground">@color/black</item>
    <item name="android:navigationBarColor">@color/black</item>
    <item name="android:statusBarColor">@color/black</item>
  </style>
</resources>
EOF
          fi
          if [ ! -f app/src/main/res/values/colors.xml ]; then
            cat > app/src/main/res/values/colors.xml << 'EOF'
<resources>
  <color name="black">#000000</color>
  <color name="white">#FFFFFF</color>
</resources>
EOF
          fi
          if [ -f app/src/main/AndroidManifest.xml ]; then
            sed -i -E 's/\s*package="[^"]*"\s*//' app/src/main/AndroidManifest.xml || true
            if grep -q '<application' app/src/main/AndroidManifest.xml; then
              if grep -q 'android:theme=' app/src/main/AndroidManifest.xml; then
                sed -i -E 's/android:theme="[^"]*"/android:theme="@style\/Theme.MAKENZI.Dark"/' app/src/main/AndroidManifest.xml
              else
                sed -i -E 's/<application /<application android:theme="@style\/Theme.MAKENZI.Dark" /' app/src/main/AndroidManifest.xml
              fi
            fi
          fi

      - name: Setup Gradle (read-only cache)
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: true

      - name: Build Debug APK
        shell: bash
        run: |
          set -euxo pipefail
          if [ -f gradlew ]; then chmod +x gradlew; ./gradlew assembleDebug --no-daemon --stacktrace --warning-mode all; else gradle assembleDebug --no-daemon --stacktrace --warning-mode all; fi

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: MAKENZI-IPTV-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Prepare keystore (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p app/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore/makenzi-keystore.jks
          test -s app/keystore/makenzi-keystore.jks

      - name: Build Release APK (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          set -euxo pipefail
          if [ -f gradlew ]; then ./gradlew assembleRelease --no-daemon --stacktrace --warning-mode all; else gradle assembleRelease --no-daemon --stacktrace --warning-mode all; fi

      - name: Upload Release APK (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: MAKENZI-IPTV-release
          path: app/build/outputs/apk/release/app-release.apk
