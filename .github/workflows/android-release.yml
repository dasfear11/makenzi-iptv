name: Android APK (debug + release if keystore)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK (API 35)
        run: |
          yes | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --licenses
          ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      # Подложим ресурсы/тему, если их нет (не мешаем, если есть)
      - name: Ensure minimal resources
        run: |
          mkdir -p app/src/main/res/values
          [ -f app/src/main/res/values/styles.xml ] || cat > app/src/main/res/values/styles.xml << 'EOF'
<resources>
  <style name="Theme.MAKENZI.Dark" parent="Theme.MaterialComponents.DayNight.NoActionBar">
    <item name="android:windowBackground">@color/black</item>
    <item name="android:navigationBarColor">@color/black</item>
    <item name="android:statusBarColor">@color/black</item>
  </style>
</resources>
EOF
          [ -f app/src/main/res/values/colors.xml ] || cat > app/src/main/res/values/colors.xml << 'EOF'
<resources>
  <color name="black">#000000</color>
  <color name="white">#FFFFFF</color>
</resources>
EOF
          if [ -f app/src/main/AndroidManifest.xml ]; then
            sed -i -E 's/\s*package="[^"]*"\s*//' app/src/main/AndroidManifest.xml || true
            if grep -q '<application' app/src/main/AndroidManifest.xml; then
              if grep -q 'android:theme=' app/src/main/AndroidManifest.xml; then
                sed -i -E 's/android:theme="[^"]*"/android:theme="@style\/Theme.MAKENZI.Dark"/' app/src/main/AndroidManifest.xml
              else
                sed -i -E 's/<application /<application android:theme="@style\/Theme.MAKENZI.Dark" /' app/src/main/AndroidManifest.xml
              fi
            fi
          fi

      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: true

      - name: Make gradlew executable (or bootstrap)
        run: |
          if [ ! -f gradlew ]; then
            echo "No wrapper -> using provisioned Gradle via action"
          else
            chmod +x gradlew
          fi

      # === Сначала гарантированно собираем debug APK (без ключа) ===
      - name: Build Debug APK
        run: |
          ./gradlew assembleDebug --no-daemon --stacktrace --warning-mode all || \
          gradle assembleDebug --no-daemon --stacktrace --warning-mode all

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: MAKENZI-IPTV-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      # === Затем пытаемся собрать release ТОЛЬКО если есть ключ ===
      - name: Prepare keystore (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p app/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore/makenzi-keystore.jks
          test -s app/keystore/makenzi-keystore.jks

      - name: Build Release APK (if keystore provided)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          ./gradlew assembleRelease --no-daemon --stacktrace --warning-mode all || \
          gradle assembleRelease --no-daemon --stacktrace --warning-mode all

      - name: Upload Release APK (if exists)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: MAKENZI-IPTV-release
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload build reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-reports
          path: |
            **/build/reports/**
            **/build/outputs/**
            **/build/logs/**
          if-no-files-found: ignore
